datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Office {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String?
  location  String?
  rooms     Room[]
  image     Json?
}

model Desk {
  id         String    @id @default(cuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  identifier String?
  room       Room?     @relation(fields: [roomId], references: [id])
  roomId     String?
  bookings   Booking[]
}

model Room {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String?
  desks     Desk[]
  office    Office?  @relation(fields: [officeId], references: [id])
  officeId  String?
  image     Json?
}

model Booking {
  id         String    @id @default(cuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  startTime  DateTime?
  endTime    DateTime?
  employee   Employee? @relation(fields: [employeeId], references: [id])
  employeeId String?
  desk       Desk?     @relation(fields: [deskId], references: [id])
  deskId     String?
}

model Employee {
  id               String      @id @default(cuid())
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  firstName        String?
  lastName         String?
  email            String?
  bookings         Booking[]
  telegramUsername String?
  phone            String?
  photo            Json?
  department       Department? @relation(fields: [departmentId], references: [id])
  departmentId     String?
}

model Department {
  id        String     @id @default(cuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  name      String?
  employees Employee[]
}
